
cmake_minimum_required(VERSION 3.18)

option(ENABLE_CUDA "Specifies whether or not enable GPU-accelerated computing." OFF)
option(ENABLE_CUDA_DEBUG "Specifies whether or not GPU debugging information is generated by the CUDA compiler, no effect if disable GPU-accelerated computing." OFF)
option(ENABLE_WATERTIGHT_TRIANGLES "Specifies whether or not enable Woop's watertight ray/triangle intersection algorithm." OFF)
option(ENABLE_VIEWER "Specifies whether or not enable real-time viewer, no effect if disable GPU-accelerated computing." OFF)

project(
    RayTracer
    VERSION 0.1
    DESCRIPTION "A simple ray tracer"
    LANGUAGES CXX C)

if(ENABLE_CUDA)
    message(STATUS "Enable GPU-accelerated computing.")
    enable_language(CUDA)
    add_definitions(-DENABLE_CUDA)
    if(ENABLE_VIEWER)
        message(STATUS "Enable real-time viewer")
        add_definitions(-DENABLE_VIEWER)
    endif()
    set(CMAKE_CUDA_SEPARABLE_COMPILATION ON)
else()
    message(STATUS "Disable GPU-accelerated computing")
endif()

if(ENABLE_WATERTIGHT_TRIANGLES)
    message(STATUS "Enable Woop's watertight ray-triangle intersection algorithm.")
    add_definitions(-DWATERTIGHT_TRIANGLES)
else()
    message(STATUS "Enable Möller-Trumbore ray-triangle intersection algorithm.")
endif()

if(CMAKE_PROJECT_NAME STREQUAL PROJECT_NAME)
    set(CMAKE_CXX_STANDARD 17)
    set(CMAKE_CXX_STANDARD_REQUIRED ON)
    set(CMAKE_CXX_EXTENSIONS OFF)
    set_property(GLOBAL PROPERTY USE_FOLDERS ON)
    set_property(DIRECTORY PROPERTY VS_STARTUP_PROJECT RayTracer)
    if(ENABLE_CUDA)
        if(NOT DEFINED CMAKE_CUDA_ARCHITECTURES)
            #《Matching CUDA arch and CUDA gencode for various NVIDIA architectures》
            # https://arnon.dk/matching-sm-architectures-arch-and-gencode-for-various-nvidia-cards/
            set(CMAKE_CUDA_ARCHITECTURES 86)
        endif()
        set(CMAKE_CUDA_STANDARD 17)
        set(CMAKE_CUDA_STANDARD_REQUIRED ON)
        set(CMAKE_CUDA_FLAGS "${CMAKE_CUDA_FLAGS} -Xcompiler \"/wd 4819\"")
        if(ENABLE_CUDA_DEBUG)
            message(STATUS "Enable GPU debugging information generation")
            set(CMAKE_CUDA_FLAGS "${CMAKE_CUDA_FLAGS} -G")
        else()
            message(STATUS "Disable GPU debugging information generation")
        endif()
        set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} /NODEFAULTLIB:libcmt.lib")
    elseif("${CMAKE_CXX_COMPILER_ID}" STREQUAL "MSVC")
        add_definitions(/wd"4819")
    endif()
endif()

find_package(tinyexr CONFIG REQUIRED)
find_package(assimp CONFIG REQUIRED)
find_package(pugixml CONFIG REQUIRED)
find_package(ZLIB REQUIRED)
if(ENABLE_CUDA AND ENABLE_VIEWER)
    find_package(FreeGLUT CONFIG REQUIRED)
endif()

add_subdirectory(src)
add_subdirectory(apps)
